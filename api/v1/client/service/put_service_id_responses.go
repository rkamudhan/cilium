package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PutServiceIDReader is a Reader for the PutServiceID structure.
type PutServiceIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutServiceIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutServiceIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewPutServiceIDCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 420:
		result := NewPutServiceIDInvalid()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPutServiceIDFailure()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutServiceIDOK creates a PutServiceIDOK with default headers values
func NewPutServiceIDOK() *PutServiceIDOK {
	return &PutServiceIDOK{}
}

/*PutServiceIDOK handles this case with default header values.

Updated
*/
type PutServiceIDOK struct {
}

func (o *PutServiceIDOK) Error() string {
	return fmt.Sprintf("[PUT /service/{id}][%d] putServiceIdOK ", 200)
}

func (o *PutServiceIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutServiceIDCreated creates a PutServiceIDCreated with default headers values
func NewPutServiceIDCreated() *PutServiceIDCreated {
	return &PutServiceIDCreated{}
}

/*PutServiceIDCreated handles this case with default header values.

Created
*/
type PutServiceIDCreated struct {
}

func (o *PutServiceIDCreated) Error() string {
	return fmt.Sprintf("[PUT /service/{id}][%d] putServiceIdCreated ", 201)
}

func (o *PutServiceIDCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutServiceIDInvalid creates a PutServiceIDInvalid with default headers values
func NewPutServiceIDInvalid() *PutServiceIDInvalid {
	return &PutServiceIDInvalid{}
}

/*PutServiceIDInvalid handles this case with default header values.

Invalid service configuration
*/
type PutServiceIDInvalid struct {
}

func (o *PutServiceIDInvalid) Error() string {
	return fmt.Sprintf("[PUT /service/{id}][%d] putServiceIdInvalid ", 420)
}

func (o *PutServiceIDInvalid) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutServiceIDFailure creates a PutServiceIDFailure with default headers values
func NewPutServiceIDFailure() *PutServiceIDFailure {
	return &PutServiceIDFailure{}
}

/*PutServiceIDFailure handles this case with default header values.

Error while creating service
*/
type PutServiceIDFailure struct {
}

func (o *PutServiceIDFailure) Error() string {
	return fmt.Sprintf("[PUT /service/{id}][%d] putServiceIdFailure ", 500)
}

func (o *PutServiceIDFailure) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
